#
# Product configuration for the Padauk Unicode font
#
# 0.01  MJPH    22-NOV-2007     Original

# product name
PRODUCT=padauk

# product version used in .zips, .exe, etc. everything except inside the font
VERSION=2.7.6

# font version number
TTF_VERSION=2.701

# list of font faces to build
FONTFACES=padauk

# list of font styles combined with $(FONTFACES) to create $(FONTS) list
FONTSTYLES=regular bold book bookbold

# Long name for using in textual titles for the main font family
DESC_NAME=Padauk

# short description - one line
DESC_SHORT=Burmese Unicode 5.1 truetype font with OT and Graphite tables

# long multi-line description - is there a line length limit?
DESC_LONG=<<EOT
Padauk is a Burmese font designed to handle all the needs of minority
languages that use the script. It has complete coverage of the Unicode
5.1 Myanmar block and smart code primarily in Graphite. There are
OpenType tables which support Burmese.
.
The font was designed by Debbi Hosken and includes an ASCII block taken
from Sophia
EOT

# parameters to pass to make_volt
#MAKE_VOLT_PARAMS=-t -n -m "_R _BS _L _LL _BD _U"
MAKE_VOLT_PARAMS=-t -m "_R _LL _L"
VOLT_PARAMS=-i -x $(f)_tt.xml

# localised make_gdl command used instead of make_gdl
MAKE_GDL = perl bin/makegdl -i font-source/myanmar5.gdl -a $($(f)_AP) $($(f)_SRC) $@

# parameters to pass to grcompiler
GRCOMPILER_PARAMS=-w3521 -q -d -v2

# per font information based on entry in FONTS and sub values
# _TARGET is the built font file
# _SRC is the base source font file that gets built into the TARGET
# _AP Attachment point database
# _VTP generated volt source file
# _VTP_SRC source volt source file used to generate _VTP
# _GDL generated GDL file
# _GDL_SHARED GDL file that is included into generated GDL file

padauk_TARGET=Padauk.ttf
padaukbold_TARGET=Padauk-Bold.ttf
padaukbook_TARGET=Padauk-Book.ttf
padaukbookbold_TARGET=Padauk-Book-Bold.ttf

padauk_NAME=Padauk
padaukbold_NAME=Padauk
padaukbook_NAME=Padauk Book
padaukbookbold_NAME=Padauk Book

padauk_FAMILY_NAME=Padauk
padaukbold_FAMILY_NAME=Padauk
padaukbook_FAMILY_NAME=Padauk Book
padaukbookbold_FAMILY_NAME=Padauk Book
padauk_SUB_NAME=Regular
padaukbold_SUB_NAME=Bold
padaukbook_SUB_NAME=Regular
padaukbookbold_SUB_NAME=Bold
padauk_FULL_NAME=Padauk
padaukbold_FULL_NAME=Padauk Bold
padaukbook_FULL_NAME=Padauk Book
padaukbookbold_FULL_NAME=Padauk Book Bold

padauk_MY_FAMILY_NAME=ပိတောက်
padaukbold_MY_FAMILY_NAME=ပိတောက်
padaukbook_MY_FAMILY_NAME=ပိတောက်စာအုပ်
padaukbookbold_MY_FAMILY_NAME=ပိတောက်စာအုပ်
padauk_MY_SUB_NAME=ပိုမှန်
padaukbold_MY_SUB_NAME=စာလုံးမဲ
padaukbook_MY_SUB_NAME=ပိုမှန်
padaukbookbold_MY_SUB_NAME=စာလုံးမဲ
padauk_MY_FULL_NAME=ပိတောက်
padaukbold_MY_FULL_NAME=ပိတောက် စာလုံးမဲ
padaukbook_MY_FULL_NAME=ပိတောက်စာအုပ်
padaukbookbold_MY_FULL_NAME=ပိတောက်စာအုပ် စာလုံးမဲ


FONTVARS=<<EOT
$(v)_SRC=font-source/$(v)_src.ttf
$(v)_VTP=font-source/$(v).vtp
$(v)_VTP_SRC=font-source/$(v)_src.vtp
$(v)_GDL=$(v).gdl
$(v)_AP=font-source/$(v).xml
$(v)_GDL_SHARED=font-source/myanmar5.gdl
EOT

# how to build the font apart from adding volt and graphite
BUILD_TARGET=<<EOT
if test -f $@; then ttfsetver $(TTF_VERSION) $@ temp.ttf ; else ttfsetver $(TTF_VERSION) $($(v)_SRC) temp.ttf; fi
# Patch ttfname so Perl uses the -CA option for the UTF-8 arguments
ttfname -n "$($(v)_FAMILY_NAME)" -l en-US -f "$($(v)_FULL_NAME)" temp.ttf temp1.ttf
ttfname -n "$($(v)_FAMILY_NAME)" -l en-US -t 16 temp1.ttf temp.ttf
ttfname -n "$($(v)_FAMILY_NAME)" -l en-US -t 1 temp.ttf temp1.ttf
ttfname -n "$($(v)_MY_FAMILY_NAME)" -l my -t 16 temp1.ttf temp.ttf
ttfname -n "$($(v)_MY_FAMILY_NAME)" -l my -t 1 temp.ttf temp1.ttf

ttfname -n "$($(v)_SUB_NAME)" -l en-US -t 17 temp1.ttf temp.ttf
ttfname -n "$($(v)_SUB_NAME)" -l en-US -t 2 temp.ttf temp1.ttf
ttfname -n "$($(v)_MY_SUB_NAME)" -l my -t 17 temp1.ttf temp.ttf
ttfname -n "$($(v)_MY_SUB_NAME)" -l my -t 2 temp.ttf temp1.ttf

ttfname -n "$($(v)_FULL_NAME)" -l en-US -t 18 temp1.ttf temp.ttf
ttfname -n "$($(v)_FULL_NAME)" -l en-US -t 4 temp.ttf temp1.ttf
ttfname -n "$($(v)_MY_FULL_NAME)" -l my -t 18 temp1.ttf temp.ttf
ttfname -n "$($(v)_MY_FULL_NAME)" -l my -t 4 temp.ttf temp1.ttf

perl bin/fixps temp1.ttf temp.ttf
perl bin/ttpuaspare temp.ttf $@
@-$(RM) temp.ttf temp1.ttf
EOT

SUPER_SRC=super
SUPER_XML=font-source/padauk_unicode.xml

EXTRA_RULES_SUPER_FONT=<<EOT
font-source/$(v)_src.ttf font-source/$(v)_src.xml : $(SUPER_SRC)/$(v).ttf $(SUPER_XML) font-source/padauk_classes.xml bin/ttfgetadv font-source/patch_padauk_unicode.xsl
	bin/ttfgetadv $(SUPER_SRC)/$(v).ttf font-source/$(v)_metrics.xml
	xsltproc -o $(v)_unicode_patched.xml --stringparam metricsFile $(v)_metrics.xml font-source/patch_padauk_unicode.xsl $(SUPER_XML)
	ttfbuilder -d 68 -c $(v)_unicode_patched.xml -x $(SUPER_SRC)/$(v).xml -z font-source/temp.xml $(SUPER_SRC)/$(v).ttf font-source/$(v)_src.ttf
	add_classes -p -c font-source/padauk_classes.xml font-source/temp.xml font-source/$(v)_src.xml 
	@- $(RM) font-source/temp.xml
EOT

EXTRA_RULES_FONT=<<EOT
$($(v)_AP) : font-source/$(v)_src.xml font-source/$(v)_src.xsl font-source/$(PRODUCT)_common.xsl
	xsltproc -o $($(v)_AP) --stringparam metricsFile $(v)_metrics.xml --stringparam fontXml ../$(v)_unicode_patched.xml font-source/$(v)_src.xsl font-source/$(v)_src.xml

testfeatures :: test-suite/tmp/$(v)_kayah_gr.html test-suite/tmp/$(v)_sgaw_gr.html  test-suite/tmp/$(v)_ulon_gr.html
	
test-suite/tmp/$(v)_sgaw_gr.html : Makefile $($(v)_TARGET) test-suite/ksw_Wordlist.txt
	mkdir -p test-suite/tmp
	grsvg $($(v)_TARGET) -i test-suite/ksw_Wordlist.txt --renderer graphite $(GRSVG_OPTIONS) --features lang=ksw -o $(SVGTESTTEMP)/$(v)_sgaw_gr
	firefox $@

test-suite/tmp/$(v)_kayah_gr.html : Makefile $($(v)_TARGET) test-suite/kyu_wdl.txt
	mkdir -p test-suite/tmp
	grsvg $($(v)_TARGET) -i test-suite/kyu_wdl.txt --renderer graphite $(GRSVG_OPTIONS) --features lang=ksw -o $(SVGTESTTEMP)/$(v)_kayah_gr
	firefox $@

test-suite/tmp/$(v)_ulon_gr.html : Makefile $($(v)_TARGET) test-suite/my_HeadwordSyllables.txt
	mkdir -p test-suite/tmp
	grsvg $($(v)_TARGET) -i test-suite/my_HeadwordSyllables.txt --renderer graphite $(GRSVG_OPTIONS) --features ulon=1 -o $(SVGTESTTEMP)/$(v)_ulon_gr
	firefox $@

EOT

VOLT_MAKE_DEPS=$($(v)_AP)

EXTRA_RULES=$(exist $(SUPER_SRC),$(foreach v,$(FONTS),$(EXTRA_RULES_SUPER_FONT)))

EXTRA_DIST=<<EOT
$(foreach v,$(dir bin),bin/$(v))
$(foreach f,$(FONTS),$($(f)_VTP_SRC))
$(foreach f,$(FONTS),font-source/$(f)_metrics.xml)
$(foreach f,$(FONTS),font-source/$(f)_src.xml)
$(foreach f,$(FONTS),font-source/$(f)_src.xsl)
font-source/$(PRODUCT)_common.xsl
$(foreach f,$(dir test-suite,.htxt),test-suite/$(f))
font-source/myfeatures.gdl
EOT

#DEBARCH=gutsy feisty edgy dapper
DEBARCH=hardy
DEBUILD=pdebuild --auto-debsign --buildresult ../debs/$(f) -- --basetgz ~/pbuilder/base-$(f).tgz --logfile ../debs/$(f)/$(f).log
DEB_BUILD_EXTRAS=, libfont-ttf-scripts-perl (>= 0.11), libfont-ttf-perl (>= 0.44), xsltproc, libxml-parser-perl, grcompiler
# texlive-xetex if you want to do testing

OT_SCRIPT=mymr

# This line is not needed if graphitesvg is installed in /usr/share
EXTRA_SVG_XSL_SCRIPT_PARAM=--stringparam local local/

