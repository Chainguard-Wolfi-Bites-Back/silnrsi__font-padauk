# An extension of the autogenerated padauk.fea
# To fix autogenerated GPOS lookups, if necessary
# To add GPOS lookups that can't easily be autogenerated

# Include GSUB lookups here - because FontForge expects it here
# This lets us work on kerning and adjusting distances with ligatures
# that have been formed in GSUB

include(../font-source/padauk-mym2_GSUB.fea)


# -------------
# GPOS lookups
# -------------

# --- NOTE on 103C and variants ----------------------------------------
# The source fonts have u103C and variants classed as base glyphs. 
# I have classified them as marks in the GDEF table. 
# They need to be mark glyphs so they can ligate with u102F and u1030 
# across a base glyph (remember u103C is reordered before lookups 
# are applied. Since OTLS zeros out the width of marks, 
# *now they need advance width added* which we do here.

# NB: The autogenerated files have them in the GPOS lookups as base 
# glyphs which generates a non-fatal (glyph order) error.

#-----------------------------------------------------------------------

# Adding advanced width for spacing marks (defined as marks in GDEF)
lookup dist_SpacingMarks {
  lookupflag 0;
    pos u103C <0 0 172 0>;
    pos u103C.alt.narr <0 0 172 0>;
    pos u103C.alt.wide <0 0 172 0>;
    pos u103C.wide <0 0 172 0>;
    pos u103C_u103D.narr <0 0 172 0>;
    pos u103C_u103D.wide <0 0 172 0>;
    pos u103C_u103D.alt.narr <0 0 172 0>;
    pos u103C_u103D.alt.wide <0 0 172 0>;
    pos u103C_u102F.narr <0 0 172 0>;
    pos u103C_u102F.wide <0 0 172 0>;
    pos u103C_u102F.alt.narr <0 0 172 0>;
    pos u103C_u102F.alt.wide <0 0 172 0>;
    pos u103C_u103D.alt.narr.tri <0 0 172 0>;
    pos u103C_u103D.alt.wide.tri <0 0 172 0>;
    pos u103C_u103D.narr.tri <0 0 172 0>;
    pos u103C_u103D.wide.tri <0 0 172 0>;
    # AA70 is a spacing mark in isolated form
    pos uAA70 <0 0 534 0>;
} dist_SpacingMarks; 

# Normally u1037 attaches to u103D or u102F. But when the latter two
# become part of a 103C ligature, they become reordered before a 
# consonant and the attachment breaks.
# This 'hack' gets it close to where it should be.
### NB: Some configurations and advance width still need to be adjusted
lookup kern_103Clig_1037 {
  lookupflag 0;
    pos u103C_u103D.narr     [@cCons] [@cUDia] u1037' <332 0 0 0>;
    pos u103C_u103D.narr     [@cCons]          u1037' <332 0 169 0>;
#    pos u103C_u103D.wide     [@cCons] [@cUDia] u1037' <0 0 0 0>;
#    pos u103C_u103D.wide     [@cCons]          u1037' <0 0 0 0>;
#    pos u103C_u103D.alt.narr [@cCons] [@cUDia] u1037' <0 0 0 0>;
#    pos u103C_u103D.alt.narr [@cCons]          u1037' <0 0 0 0>;
#    pos u103C_u103D.alt.wide [@cCons] [@cUDia] u1037' <0 0 0 0>;
#    pos u103C_u103D.alt.wide [@cCons]          u1037' <0 0 0 0>;
    pos u103C_u102F.narr     [u1016]   u1036   u1037' <317 0 153 0>; #1527
    pos u103C_u102F.narr     [@cCons] [@cUDia] u1037' <315 0 153 0>;
    pos u103C_u102F.narr     [@cCons]          u1037' <315 0 0 0>;
#    pos u103C_u102F.wide     [@cCons] [@cUDia] u1037' <0 0 0 0>;
#    pos u103C_u102F.wide     [@cCons]          u1037' <0 0 0 0>;
    pos u103C_u102F.alt.narr [u1001]   u102D   u1037' <326 0 157 0>; # BLK #498-99
    pos u103C_u102F.alt.narr [u1015]   u102D   u1037' <317 0 154 0>; # BLK #2017, 4840
    pos u103C_u102F.alt.narr [u1016]   u102D   u1037' <317 0 153 0>; # BLK #2249, 4939
    pos u103C_u102F.alt.narr [u1017]   u102D   u1037' <317 0 153 0>; #1605
    pos u103C_u102F.alt.narr [@cCons] [@cUDia] u1037' <315 0 153 0>;
    pos u103C_u102F.alt.narr [@cCons]          u1037' <315 0 0 0>;
    pos u103C_u102F.alt.wide [@cCons] [@cUDia] u1037' <309 0 150 0>; # 163
    pos u103C_u102F.alt.wide [@cCons]          u1037' <309 0 0 0>;
} kern_103Clig_1037;

#-----------------------------------------------------------------------
# Additional dist needed for some cons to clear u103C

@class103CNarr = [u103C      u103C.alt.narr u103C_u103D.narr u103C_u103D.alt.narr u103C_u102F.narr u103C_u102F.alt.narr u103C_u103D.alt.narr.tri u103C_u103D.narr.tri]; 
@class103CWide = [u103C.wide u103C.alt.wide u103C_u103D.wide u103C_u103D.alt.wide u103C_u102F.wide u103C_u102F.alt.wide u103C_u103D.alt.wide.tri u103C_u103D.wide.tri]; 

lookup dist_103C_Cons {
  lookupflag 0;
  # By design u102B, u103B have negative overhang so in this first group 
  # we compensate so it doesn't collide with u103C
  # This section comes first so it overrides u103C-cons rules below
    pos u103C            u1012' 182   u102B; # MNW #1241
    pos u103C            u1015' 135   u102B; # Sgaw Karen #704
    pos u103C            u1016' 135   u102B; # Sgaw Karen #788
    pos u103C.wide       u101E' 147   u102B; # Sgaw Karen #1167
    pos u103C.wide       u1010' 140   u102B; # Sgaw Karen #457    
    pos u103C.alt.narr   u1001' 105   u103B; # regression #25
    pos u103C            u1019'  96   u103B; # PLL #1
    
    pos [@class103CNarr] u1001'  5 [@cUDia]; # 327-350 376-378;
    pos [@class103CNarr] u1001'  5         ; # 327-350 376-378;
    pos [@class103CNarr] u1004' 13 [@cUDia]; # 495-508
    pos [@class103CNarr] u1004' 13         ; # 495-508
    pos [@class103CNarr] u1005'  5         ; # Sgaw Karen #294-95
    pos [@class103CNarr] u1012' 47 [@cUDia]; # 1058-1060
    pos [@class103CNarr] u1012' 47         ; # 1058-1060
#    pos [@class103CNarr] u1016'  0 [@cUDia]; # 1499-1526, 1528); Bookbold ONLY
#    pos [@class103CNarr] u1016'  0         ; # 1499-1526, 1528); Bookbold ONLY
    pos [@class103CNarr] u1065'  5 [@cUDia]; # PWO 1402-05
    pos [@class103CNarr] u1065'  5         ; # PWO 1402-05
    pos [@class103CNarr] u1075'  4          ; # Shan 2365-66
#    pos [@class103CNarr] u1076'  0         ; # Shan #2628; Bookbold ONLY
    
    pos [@class103CWide] u1006' 12         ; # Pa'o (blk) #1036
    pos [@class103CWide] u1010'  5 [@cUDia]; # 900, 901, 903
    pos [@class103CWide] u1010'  5         ; # 898, 899, 902; Sgaw Karen #1462
    pos [@class103CWide] u1018' 16 [@cUDia]; # Sgaw Karen #868-73
    pos [@class103CWide] u1018' 16         ; # Sgaw Karen #874-76
    pos [@class103CWide] u101A'  8 [@cUDia]; # regression #7
    pos [@class103CWide] u101A'  8         ; # 
    pos [@class103CWide] u101E' 12 [@cUDia]; # Sgaw Karen #1168-69
    pos [@class103CWide] u101E' 12         ; # Sgaw Karen #1170-73
    pos [@class103CWide] u1078'  5         ; # Shan #2856
#    pos [@class103CWide] u107D'  0         ; # Shan #3247; Bookbold ONLY
    
    pos [@class103CWide] u1010.kham'  5         ; # KHT #518-20
    pos [@class103CWide] u101C.kham' 42         ; # KHT #1318, 1321
    pos [@class103CWide] u101C.kham' 42 [@cUDia]; # KHT #1319-20
    pos [@class103CWide] u1078.kham'  3         ; # KHT #2128
    
    pos u103C.alt.wide u1000'     25  u1004.kinzi_u1036; # 549
    pos u103C.alt.wide u101F'    103  u101B.kinzi_u102E; # Sanskrit #239
    pos u103C          u1014.alt' 52  u1012.med        ; # 545, 575, 713, 1948, 3638
    
    pos u103C                u1014.alt' <0 110 52 0>   u1013.med; # Sanskrit #126
    pos @cwide' <0 0 158 0>  u1005'     <0 110 268 0>  u1006.med; # Sanskrit #57, 58, 350
    pos @cwide' <0 0 158 0>  u1012'     <0 110 310 0>  u1018.med; # Sanskrit #106
    pos @cwide' <0 0 158 0>  u1051'     <0 110 259 0>  u1000.med; # Sanskrit #281, 282
} dist_103C_Cons;
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# This section deals with 101B and some lower diacritics

# Adding LSB to ensure that the lower diacritic doesn't protrude 
# backwards into a previous cluster.
# Adding RSB to ensure that the next *base* glyph is spaced correctly
lookup dist_101Balt {
  lookupflag 0;
    pos u101B.alt' <100 0 100 0> u103E_u1030' <-90 0 0 0>;
    pos u101B.alt' <88 0 88 0>   u103E_u102F' <-78 0 0 0>;
    pos u101B.alt' <53 0 53 0>   u1030.med'   <-43 0 0 0>;
    pos u101B.alt' <12 0 12 0>   u102F.med'   <-2 0 0 0>;
    
    pos u101B.alt' <12 0 12 0>   [u1032 u1036] u102F.med' <-2 0 0 0>;
} dist_101Balt;
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# Input sequence is "cons. u102F u1032" with u1032 attaching to the cons.
lookup shift_1032 {
  lookupflag 0;
    pos u100D u102F u1032' <-196 0 0 0>; #MNW #865
    pos u1025 u102F u1032' <-196 0 0 0>; #MNW #3014
    pos u105D u102F u1032' <-196 0 0 0>; #MNW #3104
    pos u103B u102F u1032' <-102 0 0 0>; #MNW #1660
    pos u100F_u100D u102F u1032' <-177 0 0 0>; #BLK #2634
} shift_1032;
#-----------------------------------------------------------------------

lookup kern_misc {
  lookupflag 0;
    pos [u1001 u1002]' 135 [u1004.kinzi] u102B; # 2425 Shifts 102B away from 1004.kinzi
    
    pos u1000 u1004.kinzi_u102E' <93 0 0 0> u103B; # 3581
    pos u1001 u1004.kinzi_u102D' <43 0 0 0> u103B; # 2430
    
    pos u1002'      58  u1004.kinzi_u102D    u101F; # 2433 Shifts 101F
    pos u1005'     157  u1006.med    [u102F u1030]; # MNW #2444
    
    # This next one is wierd. It appears that there is nothing to attach to.
    pos u1007 u1007.med   u103D' <-297 0 725 0>; # Sanskrit #60
    pos u1010 u101E.med   u1014.med' <150 0 450 0>; # Sanskrit #95
    pos u1051 u100B.med   u103D' <69 0 725 0>; # Sanskrit #287
    pos u1014_u1010_u103C u103A' <-79 0 0 0> ; # Sanskrit #371
    
    pos u1014.alt' 186  u1010.med          [u102F u1030]; # 412, blk #134
    pos u1014.alt' 202  u1011.med    u1014.alt u1010.med; # 414
    pos u1014.alt'  35  u103D        u1014.alt u1010.med; # 1175
    
    pos u1015'     126  u100A.med    [u102F u1030]; # MNW #1453
    pos u1015'     137  u1010.med    [u102F u1030]; # MNW #1470
    pos u1015'     153  u1011.med    [u102F u1030]; # MNW #1481
    pos u1015'      89  u1021.med    [u102F u1030]; # MNW #1486-87
    pos u1017'     150  u1018.med    u1014.alt u1010.med; # 3647
    pos u1017'     150  u1018.med    u102F    ; # 3646
    pos u1019'     152  u1018.med    u1030    ; # 1953
    
    pos u101B'     107  u1005      [@cMedWide]; # 2020
    pos u101B'     115  u1014.alt  [@cMedWide]; # 2045
    pos u101B'     104  u1019        u101E.med; # MNW #2122
    
    pos u1030'     164  u1037 u103C.wide; # regression #14
    pos u1032'     164  u1037 u103C.wide; # regression #6
    pos u1032'     135  u102B; # Mon language plus maybe others
    
    pos u1036 u102B' <135 0 135 0>; # Mon - kern u1036 (attached to cons.) and u102B
    
    pos u103B'     109  u1002           u1003.med; # 1591
    pos u103B'     197  u1032 u1005 u103E_u1030.slantr; # Kayah kyu_wdl #1545, 2163, 8345, 10782
    
    pos u103C.alt.narr u1017' 107  u102D [@cCons] u1006.med; # 1611
    pos u103C.alt.narr u1017'  87  u1034 [@cCons] u1010.med; # MNW 1810
    
    pos u1081' 11   u1082 u103A [u1087 u1088]; # Shan #3537-38
} kern_misc; 

# ----------------------------------------------------------------------
# Clean up of advance width
# Make this the last "dist" lookup

lookup dist_advance {
  lookupflag 0;
    pos u1002'  58  u1004.kinzi_u102E         ; # 2441 adv width
    pos u1005'  36  u102D_u1036      u102F.med; # MNW #584
    pos u1018'  37  u102D_u1036      u102F.med; # MNW #2880
    pos u1019'  58  u1004.kinzi_u1032    u103E; # MNW #790
    pos u1010'  36  u102D_u1036               ; # 886
    
    pos [@cCons]' 36  u102E_u1036; # Moken
#    pos [@cCons]'  0  u1032_u1036; # Moken
    
    pos u102B' 135     u1036; # MNW multiple
    pos u1062'  50     u1036.dot; # KHT #1993
    
  # --- Consonants with kinzi ligatures --------------
    pos u1000'  63  u1004.kinzi_u102D         ; # Sanskrit #48, 51
    pos u1000' 103  u101B.kinzi_u102D         ; # Sanskrit #150
    pos u1002'  98  u101B.kinzi_u102D         ; # Sanskrit #154
    pos u1003'  64  u1004.kinzi_u1033         ; # Sanskrit #55
    pos u1003' 104  u101B.kinzi_u102D         ; # Sanskrit #159
    pos u1005' 103  u101B.kinzi_u102D         ; # Sanskrit #161
    pos u1006' 103  u101B.kinzi_u102D         ; # Sanskrit #163
    pos u1007'  70  u101B.kinzi_u102D         ; # Sanskrit #165
    pos u1007'  70  u101B.kinzi_u102E         ; # Sanskrit #166
    pos u1008'  29  u101B.kinzi               ; # Sanskrit #170
    pos u100D'  99  u101B.kinzi_u102D         ; # Sanskrit #172
    pos u100F' 118  u101B.kinzi_u102D         ; # Sanskrit #174
    pos u100F' 118  u101B.kinzi_u102E         ; # Sanskrit #175
    pos u1010' 103  u101B.kinzi_u102D         ; # Sanskrit #178
    pos u1010' 103  u101B.kinzi_u102E         ; # Sanskrit #179
    pos u1011' 103  u101B.kinzi_u102D         ; # Sanskrit #187
    pos u1011' 103  u101B.kinzi_u102E         ; # Sanskrit #188
    pos u1012' 124  u101B.kinzi_u102D         ; # Sanskrit #191, 193
    pos u1013' 103  u101B.kinzi_u102D         ; # Sanskrit #197
    pos u1014' 134  u101B.kinzi_u102D         ; # Sanskrit #204
    pos u1015'  99  u101B.kinzi_u102D         ; # Sanskrit #206
    pos u1018' 104  u101B.kinzi_u102D         ; # Sanskrit #211
    pos u1019'  98  u101B.kinzi_u102D         ; # Sanskrit #215
    pos u101A' 103  u101B.kinzi_u102D         ; # Sanskrit #219
    pos u101D' 102  u101B.kinzi_u102E         ; # Sanskrit #224
    pos u1050'  98  u101B.kinzi_u102D         ; # Sanskrit #228
    pos u1051'  98  u101B.kinzi_u102D         ; # Sanskrit #232
    pos u101F' 103  u101B.kinzi_u102D         ; # Sanskrit #238
    pos u1000'  63  u1004.kinzi_u103A         ; # Sanskrit #343-44
    pos u1001'  58  u1004.kinzi_u103A         ; # Sanskrit #345
    pos u1015'  59  u1004.kinzi_u103A         ; # Sanskrit #346
    pos u1003'  64  u1004.kinzi_u103A         ; # Sanskrit #347
    pos u1000' 101  u101B.kinzi_u103A         ; # Sanskrit #384
    pos u1002'  96  u101B.kinzi_u103A         ; # Sanskrit #385
    pos u1003' 102  u101B.kinzi_u103A         ; # Sanskrit #386
    pos u1006' 101  u101B.kinzi_u103A         ; # Sanskrit #387
    pos u1007'  68  u101B.kinzi_u103A         ; # Sanskrit #388
    pos u100F' 116  u101B.kinzi_u103A         ; # Sanskrit #389
    pos u1010' 101  u101B.kinzi_u103A         ; # Sanskrit #390
    pos u1011' 101  u101B.kinzi_u103A         ; # Sanskrit #391
    pos u1051'  96  u101B.kinzi_u103A         ; # Sanskrit #392
    
  # --- Consonants with u103A --------------
    pos u1000_u103B_u1015_u103A' 32         ; # 137, 2678 (to match graphite output)
    
    pos [u1004 u100B]' 10        u1037 u103A;
    pos [u1004 u100B]' 10        u1082 u103A; # Shan #121
    pos [u1004 u100B]' 10              u103A;
    pos  u1004.kham' 10  [u103A u103A_uAA70];
    
    pos u100C'   5                u1037 u103A;
    pos u100C'  10                      u103A; #1283, Pa'o (blk) #1909
    pos u100F'  13        [u1037 u103E] u103A; #MNW #935, 937
    pos u100F'  13                      u103A; # 45
    
    pos u1012'  19        [u1037 u103E] u103A; #MNW #1261, 1263
    pos u1012'  19                u103A_u1036; # Sgaw Karen #1945
    pos u1012'  19                      u103A; # 570, 1305
    
    pos u1014'  79                u103A u1037; # Pa'o (blk) #139,790 *u103A u1037 reversed from normal*
    pos u1014'  79  [u1032 u1036] u1037 u103A;
    pos u1014'  79                u1037 u103A; # 64
    pos u1014'  29                      u103A; # 65
    pos u1014.alt'  28            u103E u103A; # MNW #1369,1375
    
    pos u101B.long'  6            u103E u103A; # MNW #2196, 2199
    
    pos u101C'   5        [u1037 u103E] u103A; #MNW #2351, 2359
    pos u101C'   5                u1082 u103A; # Shan #1492
    pos u101C'   5                      u103A; # 415, 881
    pos u105C'   1                u103E u103A; #MNW #3099, 3100
    
    pos u1004.kham'  10     u1082       u103A; # KHT #355
    pos u101C.kham'   5     u1082       u103A; # KHT #1360
    pos u101C.kham'   5     u1082 u103A_uAA70; # KHT #1361
    pos u101C.kham'   5     u103A   u1088.dot; # KHT #1358-59
    
    
  # --- Consonants with u1037 --------------
    pos u1031 u1014'  79                                       u1037; # 1096 - for reordered u1031
    pos u1014'  79     [u1032 u1036]                           u1037; # 1098 1103
    pos u1014'  79                                             u1037; # Sgaw Karen #641-47
    
    pos u1031 u101B' 187                                       u1037; # 1986 - for reordered u1031
    pos u101B' 187     [u1032 u1036]                           u1037; # 1989, 1994
    pos u101B' 187                                             u1037; # 
    pos u101B.alt' 217  u103D        [u1032 u1036]             u1037; # 2077, 2079, 3354 
    pos u101B.alt' 217 [u103D u103E u103D_u103E u103E_u102F]   u1037; # 2073, 2138, 3351, 3375
    pos u101B.alt' 217 [u103D_u103E u103E_u102F] [u102D u1036] u1037; # 2105, 2133, 2140
    pos u101B.alt' 217  u102D  u102F.med                       u1037; # 1996
    pos u101B.long' 217 u103E                                  u1037; # 2098, 3362
    
    pos u102B'  48                                             u1037; # 390, 462, 470, 1003, 1219, 1233, 2805, 3098
    
# graphite wrong?    pos [u103B u103B_u103E] [u102D u1036] u102F' 218           u1037; # 115, 142, 293, 324, 1350, 1588, 1880, 2295, 2762
    pos u102F' 272                                             u1037; # 115, 142, Pa'o Karen (blk) #62, 63, 378, 692, 786, 953
    pos u103B' 163          [u1032 u1036]                      u1037; # 113, 288,
    pos u103B' 217             u1037 [u1069 u106A u106B u106C u106D]; # PWO 62-63, 946-946
    pos u103B' 163                                             u1037; # PWO 61
#    pos u1061' 149                                       u1037 u1063; # Sgaw Karen #397
    pos u1061' 187                                             u1037; # PWO #477-479
    pos u106B'  48                                             u1037; # PWO - pwo_syllables.txt
} dist_advance; 
# ----------------------------------------------------------------------

# ****
# mark
# ****

# Special mkmk lookup to correct some rules in the base_LM_mark lookup 
# where certain upper marks or re-ordered glyphs are present
# !! A mkmk lookup but it must come before lookup extend_base_L_base !!

@classmk2mkLM = [u1010.med u102F.med u1030.med u1037 u103B u103D u103D_u103E 
    u103D_u108D u103E u103E_u102F u103E_u1030];

lookup mk2mk_LM {
  lookupflag UseMarkFilteringSet @classmk2mkLM;
  markClass [u1037] <anchor -74 -53> @LM;
  pos mark [u1010.med] <anchor 104 -53> mark @LM; # 2195
  pos mark [u102F.med] <anchor 88 -53> mark @LM;
  pos mark [u1030.med] <anchor 89 -53> mark @LM;
  pos mark [u103D] <anchor 89 -53> mark @LM;
  pos mark [u103D_u103E] <anchor 88 -53> mark @LM;
  pos mark [u103D_u108D] <anchor 89 -53> mark @LM;
  pos mark [u103E] <anchor 89 -53> mark @LM;
  pos mark [u103E_u102F] <anchor 21 -53> mark @LM;
  pos mark [u103E_u1030] <anchor 21 -53> mark @LM;
} mk2mk_LM;

# These have to be run again even though they are in 
# the autogenerated lookup base_L_base
lookup extend_base_L_base {
  lookupflag 0;
  markClass [u1037] <anchor -74 -53> @L;
  pos base [u1009] <anchor 276 -53> mark @L;
  pos base [u101B] <anchor 646 -53> mark @L;
  pos base [u101B.alt] <anchor 676 -53> mark @L;
  pos base [u101B.long] <anchor 676 -53> mark @L;
  pos base [u1025] <anchor 276 -53> mark @L;
  pos base [u102C] <anchor 133 -53> mark @L;
  pos base [u103B] <anchor 250 -53> mark @L;
} extend_base_L_base;

# This lookup excluively for KSW (Sgaw Karen) language
# It shifts u1037 to the left of any lower diacritic
# !! This needs to come after lookup mkmk_LM to override the AP !!
# Sometimes RSB value added to negate adv width rule when u1037 is on the right
lookup kern_KSW_LLMark {
  lookupflag 0;
  pos u101B        u1037' <-354 0 -187 0>;
  pos u1030.med    u1037' <-488 0 0 0>;
  pos u103B        u1037' <-601 0 -163 0>;
  pos u103D.tri    u1037' <-308 0 0 0>;
  pos u103E.slanth u1037' <-221 0 0 0>;
  pos u1061        u1037' <-410 0 -187 0>;
} kern_KSW_LLMark;


# ****
# mkmk
# ****


# ----------------------------------------------------------------------
# GPOS features
# 
# Be sure to add new lookups to the list in the padauk-mym2_features.fea file
# ----------------------------------------------------------------------

include(../font-source/padauk-mym2_features.fea)

