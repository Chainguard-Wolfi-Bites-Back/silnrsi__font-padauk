
languagesystem mym2 dflt;
languagesystem mym2 KHT ;
languagesystem mym2 KSW ;
languagesystem mym2 KYU ;
languagesystem mym2 SHN ;

# *********************
# define named classes
# *********************

# autogenerated classes begin with @c
# JC: I use @class to indicate manually written classes

# @cCons -- use of autogenerated @cCons class preferred over @classAllCons
# @classAllCons = deleted, replaced by @cCons;

# @cnTakesLMDia -- ?? use of autogenerated @cnTakesLMDia class preferred over @classBigUpperVowel ??
@classBigUpperVowel = [u1004.kinzi u1004.kinzi_u102D u1004.kinzi_u102E u1004.kinzi_u1036
    u101B.kinzi u101B.kinzi_u102D u101B.kinzi_u102E u101B.kinzi_u103A u102D u102D_u1036
    u102E u1032 u1032_u102D u1033 u1034 u1035 u103A u1072 u1073 u1074 u1085];

# @cBDDia = is now an autogenerated class;

# @cBSDia = is now an autogenerated class;

# @cConsWide -- use of autogenerated @cCons class preferred over @classConsWide
# @classConsWide = [\u1000 \u1003 \u1006 \u100A \u100A.alt \u100F \u1010 \u1011 \u1018 \u101A \u101C \u101E \u101F \u1021 \u1022 \u106E \u106F \u1078 \u1079 \u107B \u107C \u107D \u1080 \uAA60 \uAA61 \uAA63 \uAA64 \uAA65 \uAA66 \uAA67 \uAA68 \uAA69 \uAA6A \uAA6C \uAA6D \uAA6E \uAA6F \uAA71 \uAA72];

# @cno_med -- ?? use of autogenerated @cno_med class preferred over @classConsTakesMedV ??
@classConsTakesMedV = [\u1000 \u1001 \u1002 \u1003 \u1004 \u1005 \u1006 \u1007 \u100A.alt \u100E \u100F
   \u1010 \u1011 \u1012 \u1013 \u1014 \u1014.alt \u1015 \u1016 \u1017 \u1018 \u1019 \u101A \u101B \u101B.alt \u101C \u101D \u101E \u101F
   \u1021 \u1022 \u1027 \u103F \u1050 \u1051 \u105C \u1065 \u106E
   \u1075 \u1076 \u1077 \u1078 \u1079 \u107B \u107C \u107D \u107F
   \u1080 \u1081 \u108E \uA9E0 \uA9E1 \uA9E2 \uA9E3 \uA9E4 \uA9E7 \uA9E8 \uA9E9
   \uAA60 \uAA61 \uAA62 \uAA63 \uAA64 \uAA66 \uAA67 \uAA68 \uAA69 \uAA6A \uAA6B \uAA6C \uAA6D \uAA6E \uAA6F 
   \uAA71 \uAA72 \uAA73 \circledash];

@class103C_noalt = [u103C u103C.wide u103C_u103D.narr u103C_u103D.wide u103C_u102F.narr u103C_u102F.wide];

@class103C_noalt_tri = [u103C_u103D.narr.tri u103C_u103D.wide.tri];

# @classMedial = deleted, replaced by @cmed;

# not used @classNarrBelow = [\u102F.med \u1030.med];

@classUpperVowel = [\u102D \u102D_u1036 \u102E \u1032_u102D \u1033 \u1034 \u1035 \u1071 \u1072 \u1073
    \u1074 \u1085 \u1086];

# @cUDia is now a class in the autogenerated .fea file
# @cUDia = [\asciicircum \u1004.kinzi \u1004.kinzi_u102D \u1004.kinzi_u102E
#     \u1004.kinzi_u1032 \u1004.kinzi_u1033 \u1004.kinzi_u1036
#     \u1004.kinzi_u103A \u1004.kinzi_u102D_u1036 \u101B.kinzi
#     \u101B.kinzi_u102D \u101B.kinzi_u102E \u101B.kinzi_u103A \u102D
#     \u102D_u1036 \u102D_uAA7C \u102E \u102E_uAA7C \u1032 \u1032_u102D
#     \u1033 \u1034 \u1035 \u1036 \u103A \u103A_u1036 \u1071 \u1072 \u1073
#     \u1074 \u1085 \u1086 \u1086_uAA7C \u109D \uA9E5 \uA9E5_uAA7C \uAA7C
#     \u1086.kham \u1032_uAA70 \u103A_uAA70 \u1036.dot];

@classnoMedWide = [u1000 u1003 u1006 u100A u100F u1010 u1011 u1018
    u101A u101C u1021];

# Mark attachment classes (defined in GDEF, used in lookupflags)
# @class103CLig = [\u102F.med \u103D \u103D.tri];
@class103CLig = [\u102F.med \u103C \u103C.wide \u103C_u103D.narr \u103C_u103D.wide \u103C_u102F.narr
    \u103C_u102F.wide \u103D \u103D.tri];
@c103C = [\u103C \u103C.alt.narr \u103C.alt.wide \u103C.wide 
	\u103C_u103D.narr \u103C_u103D.wide \u103C_u103D.alt.narr \u103C_u103D.alt.wide
	\u103C_u102F.narr \u103C_u102F.wide \u103C_u102F.alt.narr \u103C_u102F.alt.wide
	\u103C_u103D.alt.narr.tri \u103C_u103D.alt.wide.tri \u103C_u103D.narr.tri \u103C_u103D.wide.tri];
@class1037 = [u1037];

# -------------
# GSUB lookups
# -------------

# ****
# locl
# ****

lookup mym2_locl_dot {
  lookupflag 0;
    sub \u1036 by \u1036.dot ;
    sub \u1038 by \u1038.dot ;
    sub \u1087 by \u1087.dot ;
    sub \u1088 by \u1088.dot ;
    sub \u1089 by \u1089.dot ;
    sub \u108A by \u108A.dot ;
    sub \u109A by \u109A.dot ;
    sub \u109B by \u109B.dot ;
    sub \uAA7B by \uAA7B.dot ;
} mym2_locl_dot;

lookup mym2_locl_kham {
  lookupflag 0;
    sub \u1000 by \u1000.kham ;
    sub \u1002 by \u1002.kham ;
    sub \u1004 by \u1004.kham ;
    sub \u1010 by \u1010.kham ;
    sub \u1015 by \u1015.kham ;
    sub \u1019 by \u1019.kham ;
    sub \u101A by \u101A.kham ;
    sub \u101C by \u101C.kham ;
    sub \u1022 by \u1022.kham ;
    sub \u1032 by \u1086.kham ;
    sub \u1086 by \u1086.kham ;
    sub \u1075 by \u1075.kham ;
    sub \u1078 by \u1078.kham ;
    sub \u1080 by \u1080.kham ;
    sub \uAA60 by \uAA60.kham ;
    sub \uAA60.med by \uAA60.med.kham ;
    sub \uAA61 by \uAA61.kham ;
    sub \uAA62 by \uAA62.kham ;
    sub \uAA63 by \uAA63.kham ;
    sub \uAA64 by \uAA64.kham ;
    sub \uAA65 by \uAA65.kham ;
    sub \uAA66 by \uAA66.kham ;
    sub \uAA6B by \uAA6B.kham ;
    sub \uAA6C by \uAA6C.kham ;
    sub \uAA6F by \uAA6F.kham ;
    sub \uAA73 by \uAA73.kham ;
    sub \uAA75 by \uAA75.kham ;
    sub \uAA76 by \uAA76.kham ;
} mym2_locl_kham;

lookup mym2_locl_tri {
  lookupflag 0;
    sub \u103D by \u103D.tri ;
#    sub \u1010_u103D.med by \u1010_u103D.med.tri ;
#    sub \u103B_u103D by \u103B_u103D.tri ;
#    sub \u103C_u103D.narr by \u103C_u103D.narr.tri ;
#    sub \u103C_u103D.wide by \u103C_u103D.wide.tri ;
#    sub \u103C_u103D.alt.narr by \u103C_u103D.alt.narr.tri ;
#    sub \u103C_u103D.alt.wide by \u103C_u103D.alt.wide.tri ;
#    sub \u103D_u103E by \u103D_u103E.tri ;
} mym2_locl_tri;

lookup mym2_locl_slantr {
  lookupflag 0;
    sub u103E by u103E.slantr ;
#    sub \u103E_u102F by \u103E_u102F.slantr ;
#    sub \u103E_u1030 by \u103E_u1030.slantr ;
} mym2_locl_slantr;

lookup mym2_locl_slanth {
  lookupflag 0;
    sub u103E by u103E.slanth ;
#    sub \u103E_u102F by \u103E_u102F.slanth ;
#    sub \u103E_u1030 by \u103E_u1030.slanth ;
} mym2_locl_slanth;


# ****
# rphf
# ****

lookup mym2_rphf_kinzi {
  lookupflag 0;
    sub \u1004 \u103A \u1039  by \u1004.kinzi;
    sub \u105A \u103A \u1039  by \u1004.kinzi; # Mon kinzi
    sub \u101B \u103A \u1039  by \u101B.kinzi;
} mym2_rphf_kinzi;


# ****
# pref
# ****

lookup mym2_pref_miscLig {
  lookupflag 0;
    sub \u103C \u1014 \u1039 \u1010 by \u1014_u1010_u103C;
    sub \u103C \u101E \u1039 \u1010 by \u101E_u1010_u103C;
} mym2_pref_miscLig;

lookup mym2_pref_medLig {
  lookupflag 0;
    sub \u103B \u103D  by \u103B_u103D;
    sub \u103D \u103E  by \u103D_u103E;
    sub \u103B_u103D \u103E  by \u103B_u103D_u103E;
    sub \u103B_u103D \u103E.alt  by \u103B_u103D_u103E;
} mym2_pref_medLig;

lookup mym2_u103CwideSubst {
  lookupflag 0;
    sub u103C by u103C.wide;
} mym2_u103CwideSubst;

lookup mym2_pref_u103Cwide {
  lookupflag 0;
    sub [u103C]' lookup mym2_u103CwideSubst [@cConsWide];
} mym2_pref_u103Cwide;

# These are blws rules really but we put them in pref to make sure they 
# run before u103C ligation

lookup mym2_medVowelSubst {
  lookupflag 0;
    sub u102F by u102F.med;
    sub u1030 by u1030.med;
} mym2_medVowelSubst;

@classneedsUtall = [u1008 u100B u100D u1020 u1025 u105A u105B u105D u1061 u107A u107E];
lookup mym2_blws_medVowels {
  lookupflag 0;
    ignore sub [@c103C] [@cCons] [u103E u103E.alt u103E.slantr] [@cUDia] [u102F u1030]';
    ignore sub [@c103C] [@cCons] [u103E u103E.alt u103E.slantr]          [u102F u1030]';
    ignore sub [@c103C] [@cCons] [@cUDia] [u1030]'; # tallUU after wrap
    ignore sub [@c103C] [@cCons]          [u1030]'; # tallUU after wrap
    ignore sub [@classneedsUtall] [@cUDia] [u102F u1030]';
    ignore sub [@classneedsUtall]          [u102F u1030]';
#    ignore sub [u1001.med][u102F u1030]'; # for no. 867
    sub [@cCons]                   [u102F u1030]'lookup mym2_medVowelSubst;
    sub [@cCons]          [@cUDia] [u102F u1030]'lookup mym2_medVowelSubst;
    sub [@cCons] [@cUDia] [@cUDia] [u102F u1030]'lookup mym2_medVowelSubst;
    sub [@cCons] [u103E u103E.slantr u103E.slanth]          [u102F u1030]'lookup mym2_medVowelSubst;
    sub [@cCons] [u103E u103E.slantr u103E.slanth] [@cUDia] [u102F u1030]'lookup mym2_medVowelSubst;
} mym2_blws_medVowels;

# Now back to regular pref rules

lookup mym2_pref_u103CLig {
  lookupflag IgnoreBaseGlyphs, MarkAttachmentType @class103CLig;
    sub u103C u102F.med by u103C_u102F.narr;
    sub u103C u103D     by u103C_u103D.narr;
    sub u103C u103D.tri by u103C_u103D.narr.tri;
    
    sub u103C.wide u102F.med by u103C_u102F.wide;
    sub u103C.wide u103D     by u103C_u103D.wide;
    sub u103C.wide u103D.tri by u103C_u103D.wide.tri;
} mym2_pref_u103CLig;


# ****
# blwf
# ****

lookup mym2_103Ealt_Subst {
  lookupflag 0;
    sub u103D_u103E  by u103D_u103E.small;
    sub u103E.slantr by u103E.alt;
    sub u103E        by u103E.alt;
} mym2_103Ealt_Subst;

lookup mym2_blwf_103Ealt {
  lookupflag 0;
    sub [@c103C] [@cCons] u103D_u103E'  lookup mym2_103Ealt_Subst;
    sub [@c103C] [@cCons] u103E.slantr' lookup mym2_103Ealt_Subst;
    sub [@c103C] [@cCons] u103E'        lookup mym2_103Ealt_Subst;
    sub            u1009  u103E'        lookup mym2_103Ealt_Subst;
} mym2_blwf_103Ealt;

# -------------------------  Kayah (KYU ) ---------------------------
#	I tried to prevent the u103C_u103D.narr.tri ligature formation
#	by creating the u103D_u103E.small.tri first, but that didn't work.
#	So here I reversed the u103C_u103D.narr.tri ligature while creating
#	the u103D_u103E.small.tri. Maybe someone will find more elegant way.

lookup mym2_smalltri_Subst1 {
  lookupflag 0;
    sub u103C_u103D.narr.tri by u103C; # Kayah
} mym2_smalltri_Subst1;

lookup mym2_smalltri_Subst2 {
  lookupflag 0;
    sub u103E.alt by u103D_u103E.small.tri; # Kayah
} mym2_smalltri_Subst2;

lookup mym2_blwf_smalltri {
  lookupflag 0;
    sub u103C_u103D.narr.tri' lookup mym2_smalltri_Subst1 [@cCons] u103E.alt' lookup mym2_smalltri_Subst2; # Kayah
} mym2_blwf_smalltri;
# -------------------------------------------------------------------

lookup mym2_MonNgaSubst {
  lookupflag 0;
    sub u105A by u1004;
} mym2_MonNgaSubst;

lookup mym2_blwf_MonNga {
  lookupflag 0;
    sub u105A' lookup mym2_MonNgaSubst u103A;
} mym2_blwf_MonNga;

lookup mym2_blwf_u1039med {
  lookupflag 0;
    sub \u1039 \u1000  by \u1000.med;
    sub \u1039 \u1001  by \u1001.med;
    sub \u1039 \u1002  by \u1002.med;
    sub \u1039 \u1003  by \u1003.med;
    sub \u1039 \u1004  by \u1004.med;
    sub \u1039 \u1005  by \u1005.med;
    sub \u1039 \u1006  by \u1006.med;
    sub \u1039 \u1007  by \u1007.med;
    sub \u1039 \u1008  by \u1008.med;
    sub \u1039 \u100A  by \u100A.med;
    sub \u1039 \u100B  by \u100B.med;
    sub \u1039 \u100C  by \u100C.med;
    sub \u1039 \u100D  by \u100D.med;
    sub \u1039 \u100E  by \u100E.med;
    sub \u1039 \u100F  by \u100F.med;
    sub \u1039 \u1010  by \u1010.med;
    sub \u1039 \u1011  by \u1011.med;
    sub \u1039 \u1012  by \u1012.med;
    sub \u1039 \u1013  by \u1013.med;
    sub \u1039 \u1014  by \u1014.med;
    sub \u1039 \u1015  by \u1015.med;
    sub \u1039 \u1016  by \u1016.med;
    sub \u1039 \u1017  by \u1017.med;
    sub \u1039 \u1018  by \u1018.med;
    sub \u1039 \u1019  by \u1019.med;
    sub \u1039 \u101A  by \u101A.med;
    sub \u1039 \u101B  by \u101B.med;
    sub \u1039 \u101C  by \u101C.med;
    sub \u1039 \u101E  by \u101E.med;
    sub \u1039 \u1021  by \u1021.med;
    sub \u1039 \u1050  by \u1050.med;
    sub \u1039 \u1051  by \u1051.med;
    sub \u1039 \u105A  by \u105A.med; # Mon medial form
    sub \u1039 \u105B  by \u105B.med;
    sub \u1039 \u105C  by \u105C.med;
    sub \u1039 \uAA60  by \uAA60.med;
} mym2_blwf_u1039med;

# lookup mym2_blwf_shan1081 {
#   lookupflag 0;
#     sub \u1081.straight by \u1002 \u103E ;
#     sub \u1081 by \u1002 \u103E ;
# } mym2_blwf_shan1081;


# ****
# pstf
# ****

# --------------------------------------------------------------------
# This clig lookup group must come here so u102B_u103A can form
# --------------------------------------------------------------------
lookup g1037_103A_Subst1 {
  lookupflag 0;
    sub u1037 by u103A;
} g1037_103A_Subst1;

lookup g1037_103A_Subst2 {
  lookupflag 0;
    sub u103A by u1037;
} g1037_103A_Subst2;

# Use u102B as context so liga u102B_u103A can form
lookup mym2_swap_1037_103A {
  lookupflag 0;
    sub u102B u1037' lookup g1037_103A_Subst1 u103A' lookup g1037_103A_Subst2;
} mym2_swap_1037_103A;
# ---------------------- End of lookup group -------------------------

lookup mym2_pstf_asatLig {
  lookupflag 0;
    sub \u102B \u103A  by \u102B_u103A;
    sub \u1062 \u103A  by \u1062_u103A;
#    sub \u1063 \u103A  by \u1063_u103A; # lig not used (Sgaw Karen)
    sub \u103A \u1036  by \u103A_u1036;
    sub \u103A \uAA70  by \u103A_uAA70;
} mym2_pstf_asatLig;

lookup mym2_pstf_signsLig {
  lookupflag IgnoreBaseGlyphs, UseMarkFilteringSet @cUDia;
    sub \u1004.kinzi \u102D  by \u1004.kinzi_u102D;
    sub \u1004.kinzi \u102E  by \u1004.kinzi_u102E;
    sub \u1004.kinzi \u1032  by \u1004.kinzi_u1032;
    sub \u1004.kinzi \u1033  by \u1004.kinzi_u1033;
    sub \u1004.kinzi \u1036  by \u1004.kinzi_u1036;
    sub \u1004.kinzi \u103A  by \u1004.kinzi_u103A;
    sub \u1004.kinzi \u102D_u1036  by \u1004.kinzi_u102D_u1036;
    sub \u101B.kinzi \u102D  by \u101B.kinzi_u102D;
    sub \u101B.kinzi \u102E  by \u101B.kinzi_u102E;
    sub \u101B.kinzi \u103A  by \u101B.kinzi_u103A;
    sub \u102D \u1036  by \u102D_u1036;
    sub \u102D \uAA7C  by \u102D_uAA7C; # Tai Laing (stays decomposed?)
    sub \u102E \uAA7C  by \u102E_uAA7C; # Tai Laing
    sub \u1086 \uAA7C  by \u1086_uAA7C;
    sub \uA9E5 \uAA7C  by \uA9E5_uAA7C;
    sub \u102D \u1032  by \u1032_u102D;
    sub \u102E \u1036  by \u102E_u1036; # Moken
    sub \u1032 \u1036  by \u1032_u1036; # Moken
} mym2_pstf_signsLig;

lookup mym2_pstf_1009 {
  lookupflag 0;
    sub \u1009' \u103A by \u1025;
    sub \u1009' \u1037 \u103A by \u1025;
    sub \u1009' [@cmed] by \u1025;
} mym2_pstf_1009;

lookup mym2_pstf_tall_U {
  lookupflag 0;
    sub [@cmed] [@cUDia] [\u102F.med \u1030.med]' by [\u102F \u1030];
    sub [@cmed] [\u102F.med \u1030.med]' by [\u102F \u1030];
    sub [\u102F.med \u1030.med]' [@cmed] by [\u102F \u1030];
    sub [@class103C_noalt] [@cCons] \u1030.med' by \u1030;
} mym2_pstf_tall_U;

# ****
# pres
# ****

lookup mym2_raUpperVowelSubst {
  lookupflag 0;
    sub u103C by u103C.alt.narr;
    sub u103C.wide by u103C.alt.wide;
    sub u103C_u102F.narr by u103C_u102F.alt.narr;
    sub u103C_u102F.wide by u103C_u102F.alt.wide;
    sub u103C_u103D.narr by u103C_u103D.alt.narr;
    sub u103C_u103D.wide by u103C_u103D.alt.wide;
} mym2_raUpperVowelSubst;

# NB: Eventually the last 4 could maybe be consolidated into one rule
lookup mym2_pres_raUpperVowel {
  lookupflag 0;
    sub [@class103C_noalt]'lookup mym2_raUpperVowelSubst [@cCons]  [@classBigUpperVowel];
  subtable;
    sub [@class103C_noalt]'lookup mym2_raUpperVowelSubst [@cCons] [u103B] [@classBigUpperVowel];
  subtable;
    sub [@class103C_noalt]'lookup mym2_raUpperVowelSubst [@cCons] [u103E u103E.alt u103D_u103E.small.tri] [@classBigUpperVowel];
  subtable;
    sub [@class103C_noalt]'lookup mym2_raUpperVowelSubst [@cCons] [u103D_u103E] [@classBigUpperVowel];
  subtable;
    sub [@class103C_noalt]'lookup mym2_raUpperVowelSubst [@cCons] [@cmed] [@classBigUpperVowel];
} mym2_pres_raUpperVowel;

lookup mym2_raTriUpperVowelSubst {
  lookupflag 0;
    sub \u103C_u103D.narr.tri by \u103C_u103D.alt.narr.tri;
    sub \u103C_u103D.wide.tri by \u103C_u103D.alt.wide.tri;
} mym2_raTriUpperVowelSubst;

lookup mym2_pres_raTriUpperVowel {
  lookupflag 0;
    sub [@class103C_noalt_tri]'lookup mym2_raTriUpperVowelSubst [@cCons]  [@classBigUpperVowel];
  subtable;
    sub [@class103C_noalt_tri]'lookup mym2_raTriUpperVowelSubst [@cCons] [u103B] [@classBigUpperVowel];
  subtable;
    sub [@class103C_noalt_tri]'lookup mym2_raTriUpperVowelSubst [@cCons] [u103E u103E.alt] [@classBigUpperVowel];
  subtable;
    sub [@class103C_noalt_tri]'lookup mym2_raTriUpperVowelSubst [@cCons] [u103D_u103E] [@classBigUpperVowel];
  subtable;
    sub [@class103C_noalt_tri]'lookup mym2_raTriUpperVowelSubst [@cCons] [@cmed] [@classBigUpperVowel];
} mym2_pres_raTriUpperVowel;


# ****
# abvs
# ****

@classAA70Lig = [u1032 u103A u1086.kham uAA70];
lookup mym2_abvs_redupLig {
  lookupflag IgnoreBaseGlyphs, IgnoreLigatures, UseMarkFilteringSet @classAA70Lig;
    sub \u1032 \uAA70  by \u1032_uAA70; #used by default (dflt) lang if Khamti (KHT ) is not enabled
    sub \u103A \uAA70  by \u103A_uAA70;
    sub \u1086.kham \uAA70  by \u1032_uAA70;
} mym2_abvs_redupLig;


# ****
# blws
# ****

lookup mym2_blws_miscLig {
  lookupflag 0;
    sub u100A u100A.med  by u100A_u100A; # Mon stylistic default
    sub u100B u100B.med  by u100B_u100B;
    sub u100B u100C.med  by u100B_u100C;
    sub u100D u100D.med  by u100D_u100D;
    sub u100D u100E.med  by u100D_u100E;
    sub u100F u100B.med  by u100F_u100B;
    sub u100F u100D.med  by u100F_u100D;
    sub u1010.med u103D  by u1010_u103D.med;
    sub u1020 u1020  by u1020_u1020;
    sub u1020 u103E  by u1020_u103E;
    sub u1030.med u108D  by u1030_u108D; # Tai Laing
    sub u103B u103D.tri u103E.slantr  by u103B_u103D_u103E.tri; # Kayah #43
    sub u103B u103D.tri  by u103B_u103D.tri; # Shan #704
    sub u103B u103E  by u103B_u103E;
    sub u103B u103E.slantr  by u103B_u103E; # Kayah
    sub u103B u103E.slanth  by u103B_u103E; # Sgaw Karen
    sub u103D.tri u103E.slantr  by u103D_u103E.tri; # Kayah
    sub u1051 u100C.med  by u1051_u100C;
    sub u1051 u100D.med  by u1051_u100D;
    sub u1086 uAA7C  by u1086_uAA7C; # Tai Laing (abvs, but works here too)
    sub uA9E5 uAA7C  by uA9E5_uAA7C; # Tai Laing (abvs, but works here too)
} mym2_blws_miscLig;

@class103ELig = [u102F.med u1030.med u103D.tri u103E u103E.slantr u103E.slanth];
lookup mym2_blws_103ELig {
  lookupflag UseMarkFilteringSet @class103ELig;
    sub u103E u102F.med  by u103E_u102F;
    sub u103E u1030.med  by u103E_u1030;
    sub u103E.slantr u102F.med  by u103E_u102F.slantr;
    sub u103E.slantr u1030.med  by u103E_u1030.slantr;
    sub u103E.slanth u102F.med  by u103E_u102F.slanth;
    sub u103E.slanth u1030.med  by u103E_u1030.slanth;
} mym2_blws_103ELig;

lookup mym2_sub1014Subst {
  lookupflag 0;
    sub u100A by u100A.alt ;
    sub u1014 by u1014.alt ;
} mym2_sub1014Subst;

lookup mym2_blws_sub1014 {
  lookupflag 0;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [@cBDDia] ;
  subtable;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [@cUDia] [@cBSDia] ;
  subtable;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [@cBSDia] ;
  subtable;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [u103B] ;
  subtable;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [u102F] ;
  subtable;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [u1030] ;
  subtable;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [u102F.med] ;
  subtable;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [u1030.med] ;
  subtable;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [u1060] ;
  subtable;
    sub [u100A u1014 ]'lookup mym2_sub1014Subst  [u1010_u103D.med] ;
} mym2_blws_sub1014;

lookup mym2_raLongSubst {
  lookupflag 0;
    sub u101B by u101B.long;
} mym2_raLongSubst;

lookup mym2_blws_raLong {
  lookupflag 0;
    sub u101B'lookup mym2_raLongSubst [u103E u103E.slantr];
} mym2_blws_raLong;

lookup mym2_raShortSubst {
  lookupflag 0;
    sub u101B by u101B.alt ;
} mym2_raShortSubst;

lookup mym2_blws_raShort {
  lookupflag 0;
    ignore sub u101B.long' [u103E u103E.slantr];
    sub u101B'lookup mym2_raShortSubst  [@cUDia] [@cBSDia];
    sub u101B'lookup mym2_raShortSubst  [@cBSDia];
    sub u101B'lookup mym2_raShortSubst  [u103B];
} mym2_blws_raShort;


# ****
# psts
# ****

lookup mym2_psts_miscLig {
  lookupflag 0;
    sub \u1000 \u103B \u1015 \u103A  by \u1000_u103B_u1015_u103A;
    sub \u1000 \u1001.med \u103B  by \u1000_u1001_u103B;
    sub \u1009 \u102C  by \u1009_u102C;
    sub \u100A \u100A.med  by \u100A_u100A;
    sub \u1014 \u1010.med \u103B  by \u1014_u1010_u103B;
} mym2_psts_miscLig;


# ****
# clig (used for swapping glyphs)
# ****
# --------------------------------------------------------------------
# First are sets of glyphs to be swapped
# --------------------------------------------------------------------

# ----------------------- UDiac - u102F.med --------------------------
lookup UDiac_102FmedSubst1 {
  lookupflag 0;
    sub u1032 by u102F.med u1032;
    sub u1036 by u102F.med u1036;
} UDiac_102FmedSubst1;

lookup UDiac_102FmedSubst2 {
  lookupflag 0;
    sub u1032 u102F.med by u1032;
    sub u1036 u102F.med by u1036;
} UDiac_102FmedSubst2;

# ----------------------- u102B - u1036 ------------------------------
lookup g102B_1036_Subst1 {
  lookupflag 0;
    sub u102B by u1036;
} g102B_1036_Subst1;

lookup g102B_1036_Subst2 {
  lookupflag 0;
    sub u1036 by u102B;
} g102B_1036_Subst2;

# ----------------------- u1032 - u102F ------------------------------
lookup g1032_102F_Subst1 {
  lookupflag 0;
    sub u1032 by u102F;
} g1032_102F_Subst1;

lookup g1032_102F_Subst2 {
  lookupflag 0;
    sub u102F by u1032;
} g1032_102F_Subst2;

# ----------------------- u1062 - u1086 ------------------------------
lookup g1062_1086_Subst1 {
  lookupflag 0;
    sub u1062 by u1086;
} g1062_1086_Subst1;

lookup g1062_1086_Subst2 {
  lookupflag 0;
    sub u1086 by u1062;
} g1062_1086_Subst2;

# ----------------------- u1062 - u1086.kham -------------------------
lookup g1062_1086k_Subst1 {
  lookupflag 0;
    sub u1062 by u1086.kham;
} g1062_1086k_Subst1;

lookup g1062_1086k_Subst2 {
  lookupflag 0;
    sub u1086.kham by u1062;
} g1062_1086k_Subst2;

# -----------------------u1062 - u1032_uAA70 -------------------------
lookup g1062_1032_uAA70_Subst1 {
  lookupflag 0;
    sub u1062 by u1032_uAA70;
} g1062_1032_uAA70_Subst1;

lookup g1062_1032_uAA70_Subst2 {
  lookupflag 0;
    sub u1032_uAA70 by u1062;
} g1062_1032_uAA70_Subst2;

# ------------------------- Tai Laing (tla) --------------------------
# reorder tone to precede the vowel; tone should then attach to consonant

# reorder so that tone u108D precedes vowel u1062 or u1083
lookup tla_Vowel108DSubst1 {
  lookupflag 0;
    sub u1062 by u108D u1062;
    sub u1083 by u108D u1083;
} tla_Vowel108DSubst1;

lookup tla_Vowel108DSubst2 {
  lookupflag 0;
    sub u1062 u108D by u1062;
    sub u1083 u108D by u1083;
} tla_Vowel108DSubst2;

# I have to have separate lookup groups for each *tone* 
# Otherwise it keeps adding tones if more than one rule in each lookup

# reorder so that tone uAA7C precedes vowel u1083
lookup tla_VowelAA7CSubst1 {
  lookupflag 0;
    sub u1083 by uAA7C u1083;
} tla_VowelAA7CSubst1;

lookup tla_VowelAA7CSubst2 {
  lookupflag 0;
    sub u1083 uAA7C by u1083;
} tla_VowelAA7CSubst2;

#lookup mym2_swap_tla_VoweluAA7C_order2 {
#  lookupflag 0;
#    sub uAA7C u1083' lookup tla_VoweluAA7CSubst2 uAA7C';
#} mym2_swap_tla_VoweluAA7C_order2;

# ------------------------- Tai Laing (tla) --------------------------

# --------------------------------------------------------------------
# Next, the glyph machine will put the glyphs in place
# --------------------------------------------------------------------
lookup mym2_swap_thing1_thing2 {
  lookupflag 0;
    sub u1032' lookup UDiac_102FmedSubst1     u102F.med'   lookup UDiac_102FmedSubst2; # Pa'o Karen
    sub u1036' lookup UDiac_102FmedSubst1     u102F.med'   lookup UDiac_102FmedSubst2; # Pa'o Karen
    sub u102B' lookup g102B_1036_Subst1       u1036'       lookup g102B_1036_Subst2;
    sub u1032' lookup g1032_102F_Subst1       u102F'       lookup g1032_102F_Subst2;
    sub u1062' lookup g1062_1086_Subst1       u1086'       lookup g1062_1086_Subst2; # Shan
    sub u1062' lookup g1062_1086k_Subst1      u1086.kham'  lookup g1062_1086k_Subst2; # Khamti Shan
    sub u1062' lookup g1062_1032_uAA70_Subst1 u1032_uAA70' lookup g1062_1032_uAA70_Subst2; # Khamti Shan
    sub u1062' lookup tla_Vowel108DSubst1     u108D'       lookup tla_Vowel108DSubst2; #Tai Laing (tla)
    sub u1083' lookup tla_Vowel108DSubst1     u108D'       lookup tla_Vowel108DSubst2; #Tai Laing (tla)
    sub u1083' lookup tla_VowelAA7CSubst1     uAA7C'       lookup tla_VowelAA7CSubst2; #Tai Laing (tla)
} mym2_swap_thing1_thing2;


# ----------------------------------------------------------------------
# GSUB features
# 
# Be sure to add new lookups to the list in the padauk_features.fea file
# ----------------------------------------------------------------------
