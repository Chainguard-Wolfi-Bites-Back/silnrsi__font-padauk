# An extension of the autogenerated padaukbold.fea
# To fix autogenerated GPOS lookups
# To add GPOS lookups that can't easily be autogenerated

# Include GSUB lookups here - because FontForge expects it here
# This lets us work on kerning and adjusting distances with ligatures
# that have been formed in GSUB

include(../font-source/padauk-mym2_GSUB.fea)


# -------------
# GPOS lookups
# -------------

# --- NOTE on 103C and variants ----------------------------------------
# The source fonts have u103C and variants classed as base glyphs. 
# I have classified them as marks in the GDEF table. 
# They need to be mark glyphs so they can ligate with u102F and u1030 
# across a base glyph (remember u103C is reordered before lookups 
# are applied. Since OTLS zeros out the width of marks, 
# *now they need advance width added* which we do here.

# NB: The autogenerated files have them in the GPOS lookups as base 
# glyphs which generates a non-fatal (glyph order) error.

# 2015-04-04, I tried changing u103C and related glyphs to marks in the 
# source but it kept corrupting the font so I just changed it in the 
# GDEF table. (See padauk_features.fea)
#-----------------------------------------------------------------------


# Adding advanced width for spacing marks
lookup dist_103C {
  lookupflag 0;
    pos u103C <0 0 214 0>;
    pos u103C.alt.narr <0 0 214 0>;
    pos u103C.alt.wide <0 0 214 0>;
    pos u103C.wide <0 0 214 0>;
    pos u103C_u103D.narr <0 0 214 0>;
    pos u103C_u103D.wide <0 0 214 0>;
    pos u103C_u103D.alt.narr <0 0 214 0>;
    pos u103C_u103D.alt.wide <0 0 214 0>;
    pos u103C_u102F.narr <0 0 214 0>;
    pos u103C_u102F.wide <0 0 214 0>;
    pos u103C_u102F.alt.narr <0 0 214 0>;
    pos u103C_u102F.alt.wide <0 0 214 0>;
    pos u103C_u103D.alt.narr.tri <0 0 214 0>;
    pos u103C_u103D.alt.wide.tri <0 0 214 0>;
    pos u103C_u103D.narr.tri <0 0 214 0>;
    pos u103C_u103D.wide.tri <0 0 214 0>;
} dist_103C; 

#-----------------------------------------------------------------------
# This section deals with 101B and some lower diacritics

# Adding LSB to ensure that the lower diacritic doesn't protrude 
# backwards into a previous cluster.
# Adding RSB to ensure that the next *base* glyph is spaced correctly
lookup dist_101Balt {
  lookupflag 0;
    pos u101B.alt' <100 0 100 0> u103E_u1030;
    pos u101B.alt' <88 0 88 0>   u103E_u102F;
    pos u101B.alt' <53 0 53 0>   u1030.med;
    pos u101B.alt' <12 0 12 0>   u102F.med;
    # OTLS re-orders marks
    pos u101B.alt' <12 0 12 0>   [u1032 u1036] u102F.med;
} dist_101Balt;

# Since OTLS zeros out the width of marks the width of 101B.alt doesn't
# affect them. We need to explicitly adjust width for them to kern.
lookup kern_101Balt {
  lookupflag 0;
    pos u101B.alt u103E_u1030' <-90 0 0 0>;
    pos u101B.alt u103E_u102F' <-78 0 0 0>;
    pos u101B.alt u1030.med'   <-43 0 0 0>;
    pos u101B.alt u102F.med'   <-2 0 0 0>;
    # OTLS re-orders marks
#    pos u101B.alt [u1032 u1036] u102F.med' <-2 0 0 0>;
} kern_101Balt;

# Not sure why this doesn't work but it's no big deal - only 2 points.
lookup pos_101Balt_1036 {
  lookupflag 0;
    pos u102F.med' <-2 0 0 0>; # OTLS re-orders marks
} pos_101Balt_1036;

lookup kern_101Balt_1036 {
  lookupflag 0;
    pos u101B.alt u1036 u102F.med' lookup pos_101Balt_1036; 
} kern_101Balt_1036;
#-----------------------------------------------------------------------

lookup kern_misc {
  lookupflag 0;
    pos u1002' 135 [u1004.kinzi] u102B;
    pos u1014.alt' 107 [u1010.med] u102F; # 412
    pos u1014.alt' 112 [u1011.med] u1014.alt [u1010.med]; # 414
    pos u1014.alt'  16 [u103D]     u1014.alt [u1010.med]; # 1175
    pos u101B'  95 [u1005] [u1006.med]; # 2020
    pos u1032' 135 u102B; # Mon language
} kern_misc; 

# This is a Mon language sequence
# This sequence can not be reordered easily in OT but this rule works 
# for the all the words I can find. It may need to be refined.
lookup kern_TallAA {
  lookupflag 0;
    pos u102B' <135 0 0 0> u1036' <-341 0 0 0>;
    pos u103C [@cCons] u102B' <182 0 182 0>;
} kern_TallAA;

# Original sequence was u102F u1032 with u1032 attaching at U 
# OTLS reordered the pair so now we kern to make it appear to attach
# Adding 172 to LSB works for many but may need contextual rules for precise placement
# feature disabled
lookup kern_102F_1032 {
  lookupflag 0;
    pos u1032' <197 0 0 0> u102F;
} kern_102F_1032;


# ****
# mark
# ****

# Special mkmk lookup to correct some rules in the base_LM_mark lookup 
# where certain upper marks or re-ordered glyphs are present
# !! A mkmk lookup but it must come before lookup extend_base_L_base !!

@classmk2mkLM = [u102F.med u1030.med u1037 u103B u103D u103D_u103E 
    u103D_u108D u103E u103E_u102F u103E_u1030];

lookup mk2mk_LM {
  lookupflag UseMarkFilteringSet @classmk2mkLM;
  markClass [u1037] <anchor -96 -53> @LM;
  pos mark [u102F.med] <anchor 96 -53> mark @LM;
  pos mark [u1030.med] <anchor 96 -53> mark @LM;
  pos mark [u103D] <anchor 100 -53> mark @LM;
  pos mark [u103D_u103E] <anchor 84 -53> mark @LM;
  pos mark [u103D_u108D] <anchor 100 -53> mark @LM;
  pos mark [u103E] <anchor 105 -53> mark @LM;
  pos mark [u103E_u102F] <anchor 17 -53> mark @LM;
  pos mark [u103E_u1030] <anchor 18 -53> mark @LM;
} mk2mk_LM;


# We're actually overriding the (later) base_LL_base autogenerated  
# lookup and pointing it back to the base_L_base
lookup extend_base_L_base {
  lookupflag 0;
  markClass [u1037] <anchor -96 -53> @L;
  pos base [u1009] <anchor 295 -53> mark @L;
  pos base [u101B] <anchor 714 -53> mark @L;
  pos base [u101B.alt] <anchor 728 -53> mark @L;
  pos base [u101B.long] <anchor 730 -53> mark @L;
  pos base [u1025] <anchor 279 -53> mark @L;
  pos base [u102C] <anchor 133 -53> mark @L;
  pos base [u103B] <anchor 304 -53> mark @L;
} extend_base_L_base;


# ****
# mkmk
# ****



# ----------------------------------------------------------------------
# GPOS features
# 
# Be sure to add new lookups to the list in the padauk_features.fea file
# ----------------------------------------------------------------------

include(../font-source/padauk-mym2_features.fea)

